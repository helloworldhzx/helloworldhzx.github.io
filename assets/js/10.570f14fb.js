(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{498:function(t,i,e){t.exports=e.p+"assets/img/git.4aff4dfe.jpg"},511:function(t,i,e){"use strict";e.r(i);var a=e(6),r=Object(a.a)({},(function(){var t=this,i=t.$createElement,a=t._self._c||i;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("a",{attrs:{href:"https://learngitbranching.js.org/?locale=zh_CN",target:"_blank",rel:"noopener noreferrer"}},[t._v("git练习网址"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"提交规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提交规范"}},[t._v("#")]),t._v(" 提交规范")]),t._v(" "),a("ul",[a("li",[t._v("feat：新功能")]),t._v(" "),a("li",[t._v("fix：修复bug")]),t._v(" "),a("li",[t._v("doc：文档改变")]),t._v(" "),a("li",[t._v("style：代码格式改变")]),t._v(" "),a("li",[t._v("refactor：某个已有功能重构")]),t._v(" "),a("li",[t._v("perf：性能优化")]),t._v(" "),a("li",[t._v("test：增加测试")]),t._v(" "),a("li",[t._v("build：改变了build工具 如 grunt换成了 npm")]),t._v(" "),a("li",[t._v("revert：撤销上一次的commit")])]),t._v(" "),a("h2",{attrs:{id:"添加提交"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加提交"}},[t._v("#")]),t._v(" 添加提交")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("git add 把文件提交到仓库"),a("br"),t._v("\ngit add .   所有变化提交到暂存区，包括文件内容修改(modified)以及新文件(new)，但不包括被删除的文件。\ngit add -u  仅监控已经被add的文件（即tracked file），他会将被修改的文件提交到暂存区\ngit add -A 是上面两个功能的合集")])]),t._v(" "),a("li",[a("p",[t._v("git commit -m ''  提交到本地仓库，-m后面填写提交说明，有办法可以不写提交，但不推荐")])])]),t._v(" "),a("h2",{attrs:{id:"版本回退"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本回退"}},[t._v("#")]),t._v(" 版本回退")]),t._v(" "),a("ol",[a("li",[t._v("git log  命令显示从最近到最远的提交日志\n--pretty=oneline  简洁版信息\ngit log --graph命令可以看到分支合并图\ngit log --graph --pretty=oneline --abbrev-commit\n在Git中，用HEAD表示当前版本")]),t._v(" "),a("li",[t._v("git reset --hard HEAD^ 回退版本\n回退版本之后若想返回之前的版本，需要commit id\ngit reflog 记录你的每一次命令，可以找到id")]),t._v(" "),a("li",[t._v("git diff HEAD -- readme.txt  查看工作区和版本库里面最新版本的区别")])]),t._v(" "),a("h2",{attrs:{id:"撤回修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#撤回修改"}},[t._v("#")]),t._v(" 撤回修改")]),t._v(" "),a("ol",[a("li",[t._v("git checkout -- file 未被git add,  --必须，没有--为切换分支")]),t._v(" "),a("li",[t._v("git reset HEAD <file> 把暂存区的修改撤销掉，提交到缓存区时")]),t._v(" "),a("li",[t._v("若提交到本地仓库，使用版本回退git reset --hard HEAD^")])]),t._v(" "),a("h2",{attrs:{id:"删除文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除文件"}},[t._v("#")]),t._v(" 删除文件")]),t._v(" "),a("ol",[a("li",[t._v("rm file  删除文件")]),t._v(" "),a("li",[t._v("git rm 从版本库中删除该文件")]),t._v(" "),a("li",[t._v("若删错还未conmmit提交，使用git checkout -- file 恢复")])]),t._v(" "),a("h2",{attrs:{id:"添加远程库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加远程库"}},[t._v("#")]),t._v(" 添加远程库")]),t._v(" "),a("ol",[a("li",[t._v("git remote add origin git@server-name:path/repo-name.git  关联一个远程")])]),t._v(" "),a("h2",{attrs:{id:"分支管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支管理"}},[t._v("#")]),t._v(" 分支管理")]),t._v(" "),a("ol",[a("li",[t._v("git checkout -b dev  git checkout命令加上-b参数表示创建并切换")]),t._v(" "),a("li",[t._v("git branch  列出所有分支，*为当前分支,  -d 删除分支 git branch -f 强制移动指向")]),t._v(" "),a("li",[t._v("git merge 用于合并指定分支到当前分支\n"),a("ul",[a("li",[t._v("查看分支：git branch")]),t._v(" "),a("li",[t._v("创建分支：git branch <name>")]),t._v(" "),a("li",[t._v("切换分支：git checkout <name>")]),t._v(" "),a("li",[t._v("创建+切换分支：git checkout -b <name>")]),t._v(" "),a("li",[t._v("合并某分支到当前分支：git merge <name>")]),t._v(" "),a("li",[t._v("删除分支：git branch -d <name>")])])]),t._v(" "),a("li",[t._v("git stash  先将编辑的内容存储\ngit stash list 存储的列表\ngit stash apply 恢复但不会删除stash内容\ngit stash drop  删除stash内容\ngit stash pop 恢复并删除")]),t._v(" "),a("li",[t._v("git remote 查看远程库的信息,\ngit remote-v显示更详细的信息")])]),t._v(" "),a("h2",{attrs:{id:"合并管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合并管理"}},[t._v("#")]),t._v(" 合并管理")]),t._v(" "),a("p",[t._v("git cherry-pick c1 c3  可以选择需要合并的提交记录"),a("br"),t._v("\ngit rebase -i HEAD~<number> 面板操作多个记录"),a("br"),t._v("\ngit describe <ref>")]),t._v(" "),a("p",[a("code",[t._v("<ref> 可以是任何能被 Git 识别成提交记录的引用，如果你没有指定的话，Git 会以你目前所检出的位置（HEAD）")])]),t._v(" "),a("p",[t._v("git checkout -b totallyNotMain o/main\ngit branch -u o/main foo")]),t._v(" "),a("p",[a("img",{attrs:{src:e(498),alt:"git"}})])])}),[],!1,null,null,null);i.default=r.exports}}]);